name: Verify Ticket Submission

on:
  pull_request:
    branches:
      - main
    paths:
      - 'tickets/**'

jobs:
  verify:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate submission format
        id: gatekeeper
        run: |
          API_RESPONSE=$(curl -s -L \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files")

          FILE_COUNT=$(echo "$API_RESPONSE" | jq 'length')
          if [ "$FILE_COUNT" -ne 1 ]; then
            echo "::error::Pull Request must contain exactly one file."
            exit 1
          fi

          STATUS=$(echo "$API_RESPONSE" | jq -r '.[0].status') # e.g., "added", "modified"
          FILENAME=$(echo "$API_RESPONSE" | jq -r '.[0].filename')

          if [ "$STATUS" != "added" ]; then
            echo "::error::Only new file additions are allowed."
            exit 1
          fi

          if [[ ! "$FILENAME" =~ ^tickets/.*\.txt$ ]]; then
            echo "::error::File must be in 'tickets/' and have a '.txt' extension."
            exit 1
          fi

          echo "✅ Submission format is valid."
          echo "ticket_file=$FILENAME" >> $GITHUB_OUTPUT

      - name: Verify signature
        env:
          PUBLIC_KEY_B64: >
            LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUZrd0V3WUhLb1pJemowQ0FRWUlLb1pJemowREFRY0RRZ0FFcjRqYlRwaHJKTU5EaHk3c0JUMmxPaXJVZXJDUwpORlBaeWlTQU41NWFSN3BXa0txbnVqc05ML3FXMnJNUEx6bmMvYTBaQjFxUzFVVkd4Mm90SnFtUjF3PT0KLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0tCg==
        run: |
          TEMP_DIR=$(mktemp -d)
          cd $TEMP_DIR
          
          echo "Verifying ticket: ${{ steps.gatekeeper.outputs.ticket_file }}"
          
          echo ${{ env.PUBLIC_KEY_B64 }} | base64 -d > ecdsa_public.pem
          
          TICKET_ID=$(basename "${{ steps.gatekeeper.outputs.ticket_file }}" .txt)
          echo "Extracted Ticket ID: $TICKET_ID"
          
          echo -n "$TICKET_ID" > ticket.txt
          
          SIGNATURE_B64=$(cat "${{ github.workspace }}/${{ steps.gatekeeper.outputs.ticket_file }}")
          
          if [ -z "$SIGNATURE_B64" ]; then
            echo "::error::The submitted ticket file is empty."
            exit 1
          fi
          
          echo "$SIGNATURE_B64" | base64 -d > signature.bin
          
          echo "Running openssl verification..."
          if openssl dgst -sha256 -verify ecdsa_public.pem -signature signature.bin ticket.txt; then
            echo "✅ Signature Verification Successful!"
          else
            echo "::error::Signature verification failed. The signature does not match the ticket ID."
            exit 1
          fi